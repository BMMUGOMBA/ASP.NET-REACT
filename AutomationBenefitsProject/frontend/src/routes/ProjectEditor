import React, { useState } from 'react'
import { Auth } from '../lib/auth'
import { Store } from '../lib/store'
import Field from '../components/Field'
import TagInput from '../components/TagInput'
import FilePicker from '../components/FilePicker'
import { useNavigate } from 'react-router-dom'

export default function ProjectEditor(){
  const me = Auth.me(); const nav = useNavigate()
  if(!me) { nav('/login'); return null }

  const [processName,setProcessName]=useState('')
  const [businessUnit,setBusinessUnit]=useState('PPB')
  const [roles,setRoles]=useState([])
  const [systems,setSystems]=useState([])
  const [percent,setPercent]=useState(0)
  const [staff,setStaff]=useState(0)
  const [breadth,setBreadth]=useState(0)
  const [cycle,setCycle]=useState(0)
  const [complexity,setComplexity]=useState(0)
  const [hours,setHours]=useState(0)
  const [howOften,setHowOften]=useState('Performed daily during onboarding peaks.')

  // BRD section
  const [brdFile,setBrdFile]=useState(null)
  const [brdObjective,setBrdObjective]=useState('')
  const [brdScope,setBrdScope]=useState('')
  const [brdAssumptions,setBrdAssumptions]=useState('')
  const [brdAcceptance,setBrdAcceptance]=useState('')

  const submit=(e)=>{ e.preventDefault()
    const payload = {
      processName, businessUnit,
      rolesImpacted: roles, systemsImpacted: systems,
      percentAutomated: Number(percent), staffImpacted: Number(staff),
      breadth: Number(breadth), cycleTimeMinutes: Number(cycle),
      complexitySystems: Number(complexity), manHoursPerMonth: Number(hours),
      howOftenText: howOften,
      brd: { file: brdFile, objective: brdObjective, scope: brdScope, assumptions: brdAssumptions, acceptanceCriteria: brdAcceptance }
    }
    const p = Store.create(payload, me)
    nav(`/view/${p.id}`)
  }

  return (
    <div className="container">
      <div className="panel">
        <h1 className="h1">Automation Benefits Realization â€“ New Project</h1>
        <form onSubmit={submit}>
          <div className="h2">Process Sizing</div>
          <div className="row">
            <Field label="Process Name"><input className="input" value={processName} onChange={e=>setProcessName(e.target.value)} required/></Field>
            <Field label="Business Unit"><input className="input" value={businessUnit} onChange={e=>setBusinessUnit(e.target.value)} required/></Field>
            <Field label="% of process automated"><input className="input" type="number" min="0" max="100" value={percent} onChange={e=>setPercent(e.target.value)} required/></Field>
            <Field label="Number of staff impacted"><input className="input" type="number" min="0" value={staff} onChange={e=>setStaff(e.target.value)} required/></Field>
          </div>

          <div className="row">
            <TagInput label="Roles impacted" value={roles} onChange={setRoles}/>
            <TagInput label="Systems impacted" value={systems} onChange={setSystems}/>
          </div>

          <div className="h2">Process Sizing (details)</div>
          <div className="row">
            <Field label="How often is this process performed? (free text)">
              <textarea rows="3" value={howOften} onChange={e=>setHowOften(e.target.value)} />
            </Field>
            <Field label="How many staff members are performing this process (Breadth)">
              <input className="input" type="number" value={breadth} min="0" onChange={e=>setBreadth(e.target.value)}/>
            </Field>
            <Field label="How long for one cycle (minutes)">
              <input className="input" type="number" value={cycle} min="0" onChange={e=>setCycle(e.target.value)}/>
            </Field>
            <Field label="How many systems involved (Complexity)">
              <input className="input" type="number" value={complexity} min="0" onChange={e=>setComplexity(e.target.value)}/>
            </Field>
            <Field label="Man-hours dedicated per month">
              <input className="input" type="number" value={hours} min="0" onChange={e=>setHours(e.target.value)}/>
            </Field>
          </div>

          <div className="h2">BRD Section</div>
          <div className="row">
            <FilePicker label="Upload BRD" file={brdFile} onChange={setBrdFile}/>
            <Field label="BRD Objective"><input className="input" value={brdObjective} onChange={e=>setBrdObjective(e.target.value)} /></Field>
            <Field label="BRD Scope"><input className="input" value={brdScope} onChange={e=>setBrdScope(e.target.value)} /></Field>
            <Field label="Key Assumptions"><input className="input" value={brdAssumptions} onChange={e=>setBrdAssumptions(e.target.value)} /></Field>
            <Field label="Acceptance Criteria"><input className="input" value={brdAcceptance} onChange={e=>setBrdAcceptance(e.target.value)} /></Field>
          </div>

          <div className="toolbar" style={{marginTop:12}}>
            <button className="btn">Submit Project</button>
          </div>
        </form>
      </div>
    </div>
  )
}
